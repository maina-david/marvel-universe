{"version":3,"sources":["components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","layouts/Admin/Admin.js","components/CharacterItem.js","components/CharacterTable.js","components/Search.js","views/Characters.js","routes.js","assets/img/marvel-logo.png","components/Navbars/RTLNavbar.js","components/Footer/Footer.js","contexts/ThemeContext.js","components/FixedPlugin/FixedPlugin.js","layouts/RTL/RTL.js","assets/img/react-logo.png","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","index.js","assets/img/anime3.png"],"names":["AdminNavbar","ps","props","React","useState","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","color","setcolor","useEffect","window","addEventListener","updateColor","removeEventListener","innerWidth","toggleModalSearch","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","default","Modal","modalClassName","toggle","ModalHeader","Input","placeholder","type","autoFocus","backgroundColors","BackgroundColorContext","createContext","changeColor","Sidebar","location","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","target","imgSrc","text","to","innerLink","Consumer","data","ref","map","prop","key","redirect","routeName","path","pathname","pro","layout","activeClassName","icon","rtlName","name","defaultProps","CharacterItem","item","Col","sm","Card","CardImg","top","width","height","thumbnail","CardBody","CardTitle","tag","CardSubtitle","previousData","JSON","parse","localStorage","getItem","push","setItem","stringify","favorite","CharacterTable","items","isLoading","Row","id","Search","search","setText","onChange","q","value","hash","Characters","setItems","setLoading","query","setQuery","fetch","a","axios","result","console","log","results","component","Admin","mainPanelRef","document","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","i","length","add","scrollTop","scrollingElement","getBrandText","Fragment","from","DropdownMenu","right","NavLink","DropdownItem","divider","Footer","Date","getFullYear","themes","ThemeContext","theme","changeTheme","FixedPlugin","dropDownIsOpen","setdropDownIsOpen","Dropdown","Badge","bgColor","handleBgClick","RTL","body","head","link","createElement","rel","appendChild","getElementById","RTLNavbar","ThemeContextWrapper","setTheme","Provider","children","BackgroundColorWrapper","setColor","ReactDOM","render"],"mappings":"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","file":"static/js/main.cf9274c0.chunk.js","sourcesContent":["import React from 'react'\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  \n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <InputGroup className=\"search-bar\">\n                <Button color=\"link\" onClick={toggleModalSearch}>\n                  <i className=\"tim-icons icon-zoom-split\" />\n                  <span className=\"d-lg-none d-md-block\">Search</span>\n                </Button>\n              </InputGroup>\n              <UncontrolledDropdown nav>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\n                </DropdownToggle>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n            autoFocus\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import { createContext } from \"react\";\n\nexport const backgroundColors = {\n  primary: \"primary\",\n  blue: \"blue\",\n  green: \"green\",\n};\n\nexport const BackgroundColorContext = createContext({\n  color: backgroundColors.blue,\n  changeColor: (color) => {},\n});\n","import React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/marvel-logo.png\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: \"/admin/characters\",\n                text: \"Marvel Universe\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/admin/characters\" />\n              </Switch>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","import React from 'react';\nimport {\n  Card, \n  CardImg,  \n  CardBody,\n  CardTitle, \n  CardSubtitle,\n  Button,\n  Col\n} from \"reactstrap\";\n\nconst CharacterItem = ({item}) => {\n\n    const favorite = (item)=>{\n      // getting the previous element and adding the new favorite item\n      var previousData = JSON.parse(localStorage.getItem('favorites'))\n      previousData.push(item)\n      localStorage.setItem('favorites',JSON.stringify(previousData))\n    }\n\n    return (\n          <Col sm=\"3\" className=\"h-100\">\n          <Card>\n            <CardImg top width=\"100%\" height=\"250px\" src={item.thumbnail.path + \"/portrait_xlarge.jpg\"} alt=\"\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">{item.name}</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> <strong>Name:</strong> {item.name}</CardSubtitle>\n              {/* <CardText><strong>Description:</strong> {item.description}</CardText> */}\n              <Button onClick={()=>favorite(item)}>Favourite</Button>\n            </CardBody>\n          </Card>\n          </Col>\n    )\n}\n\nexport default CharacterItem\n","import React from 'react'\nimport CharacterItem from './CharacterItem'\nimport {\n   Row\n  } from \"reactstrap\";\n\nconst CharacterTable = ({items,isLoading}) => {\n    return isLoading ? <h1>Loading...</h1> :\n         <Row>\n        {\n            items.map(item=>(\n                <CharacterItem key={item.id} item={item}></CharacterItem>\n            ))\n        }\n        </Row>\n}\n\nexport default CharacterTable\n","import React, {useState} from 'react'\n\n\nconst Search = ({search}) => {\n    const[text,setText] = useState('')\n\n    const onSearch= (q)=>{\n        setText(q)\n        search(q)\n    }\n\n    return (\n        <section className=\"search mb-2\">\n            <form>\n                <input type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Find a character\"\n                autoFocus\n                onChange={(e)=>onSearch(e.target.value)}\n                value={text}/>\n            </form>\n        </section>\n    )\n}\n\nexport default Search\n","import React , {useEffect,useState} from 'react'\nimport CharacterTable from '../components/CharacterTable'\nimport axios from 'axios'\nimport Search from '../components/Search'\n\n//This was generated from md5 of ts + public key + private key\nconst hash =  \"cd5333d40f22751601356bd98ddd2774\"\n\nconst Characters = () => {\n  const[items,setItems] = useState([])\n  const[isLoading,setLoading] = useState(true)\n  const [query,setQuery] = useState('')\n\n  useEffect(()=>{\n      const fetch = async()=>{\n        if(query===''){\n          // checking if favorites array is empty or does not exist\n          if(localStorage.getItem('favorites')==='[]' || !localStorage.getItem('favorites')){\n            localStorage.setItem('favorites', '[]')\n            const result = await axios(`https://gateway.marvel.com/v1/public/characters?ts=1&apikey=9447362098e6ff19b448e4f2996f9fe3&hash=${hash}`)\n            console.log(result.data.data.results)\n            setItems(result.data.data.results)\n            setLoading(false) \n          }else{\n            let favorite = JSON.parse(localStorage.getItem('favorites'))\n            setItems(favorite)\n            setLoading(false)\n          }\n          \n          \n        }else{\n          const result = await axios(`https://gateway.marvel.com/v1/public/characters?nameStartsWith=${query}&ts=1&apikey=9447362098e6ff19b448e4f2996f9fe3&hash=${hash}`)\n          console.log(result.data.data.results)\n          setItems(result.data.data.results)\n          setLoading(false)\n        }\n      \n    }\n\n    fetch()\n  },[query])\n\n  return (\n        <>\n          <div className=\"content\">\n            <Search search={(q)=>setQuery(q)}></Search>\n            <CharacterTable items={items} isLoading={isLoading} />\n          </div>\n        </>\n  );\n}\nexport default Characters;","import Characters from \"views/Characters.js\";\n\nvar routes = [\n  {\n    path: \"/characters\",\n    name: \"Characters\",\n    icon: \"tim-icons icon-single-02\",\n    component: Characters,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","export default __webpack_public_path__ + \"static/media/marvel-logo.58b8e3c4.png\";","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  ModalHeader,\n  NavbarToggler,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler type=\"button\" onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"mr-auto\" navbar>\n              <InputGroup className=\"search-bar\">\n                <Button color=\"link\" onClick={toggleModalSearch}>\n                  <i className=\"tim-icons icon-zoom-split\" />\n                  <span className=\"d-lg-none d-md-block\">Search</span>\n                </Button>\n              </InputGroup>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  data-toggle=\"dropdown\"\n                  nav\n                >\n                  <div className=\"notification d-none d-lg-block d-xl-block\" />\n                  <i className=\"tim-icons icon-sound-wave\" />\n                  <p className=\"d-lg-none\">Notifications</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" tag=\"ul\" right>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Mike John responded to your email\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      You have 5 more tasks\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Your friend Michael is in town\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Another notification\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Another one\n                    </DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/anime3.png\").default}\n                    />\n                  </div>\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" tag=\"ul\">\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                  </NavLink>\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <Container fluid>\n        <div className=\"copyright\">\n          © {new Date().getFullYear()}\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { createContext } from \"react\";\n\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\",\n};\n\nexport const ThemeContext = createContext({\n  theme: themes.dark,\n  changeTheme: () => {},\n});\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Dropdown, DropdownToggle, Badge } from \"reactstrap\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\nimport { backgroundColors } from \"contexts/BackgroundColorContext\";\n\nfunction FixedPlugin(props) {\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\n  const handleClick = () => {\n    setdropDownIsOpen(!dropDownIsOpen);\n  };\n  return (\n    <div className=\"fixed-plugin\">\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\n        <DropdownToggle tag=\"div\">\n          <i className=\"fa fa-cog fa-2x\" />\n        </DropdownToggle>\n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <Badge\n                color=\"primary\"\n                className={\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.primary);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"info\"\n                className={\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.blue);\n                }}\n              />{\" \"}\n              <Badge\n                color=\"success\"\n                className={\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\n                }\n                onClick={() => {\n                  props.handleBgClick(backgroundColors.green);\n                }}\n              />{\" \"}\n            </div>\n          </li>\n          <li className=\"adjustments-line text-center color-change\">\n            <ThemeContext.Consumer>\n              {({ changeTheme }) => (\n                <>\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n                  <Badge\n                    className=\"light-badge mr-2\"\n                    onClick={() => changeTheme(themes.light)}\n                  />{\" \"}\n                  <Badge\n                    className=\"dark-badge ml-2\"\n                    onClick={() => changeTheme(themes.dark)}\n                  />{\" \"}\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\n                </>\n              )}\n            </ThemeContext.Consumer>\n          </li>\n          \n        </ul>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default FixedPlugin;\n","import React from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport RTLNavbar from \"components/Navbars/RTLNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction RTL(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // on this page, we need on the body tag the classes .rtl and .menu-on-right\n    document.body.classList.add(\"rtl\", \"menu-on-right\");\n    // we also need the rtl bootstrap\n    // so we add it dynamically to the head\n    let head = document.head;\n    let link = document.createElement(\"link\");\n    link.type = \"text/css\";\n    link.rel = \"stylesheet\";\n    link.id = \"rtl-id\";\n    link.href =\n      \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\n    head.appendChild(link);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n      // when we exit this page, we need to delete the classes .rtl and .menu-on-right\n      // from the body tag\n      document.body.classList.remove(\"rtl\", \"menu-on-right\");\n      // we also need to delete the rtl bootstrap, so it does not break the other pages\n      // that do not make use of rtl\n      document.getElementById(\"rtl-id\").remove();\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/rtl\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <>\n      <BackgroundColorContext.Consumer>\n        {({ color, changeColor }) => (\n          <React.Fragment>\n            <div className=\"wrapper\">\n              <Sidebar\n                routes={routes}\n                rtlActive\n                logo={{\n                  outterLink: \"https://www.creative-tim.com/\",\n                  text: \"الإبداعية تيم\",\n                  imgSrc: logo,\n                }}\n                toggleSidebar={toggleSidebar}\n              />\n              <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n                <RTLNavbar\n                  brandText={getBrandText(location.pathname)}\n                  toggleSidebar={toggleSidebar}\n                  sidebarOpened={sidebarOpened}\n                />\n                <Switch>{getRoutes(routes)}</Switch>\n                {\n                  // we don't want the Footer to be rendered on map page\n                  location.pathname === \"/admin/maps\" ? null : <Footer fluid />\n                }\n              </div>\n            </div>\n            <FixedPlugin bgColor={color} handleBgClick={changeColor} />\n          </React.Fragment>\n        )}\n      </BackgroundColorContext.Consumer>\n    </>\n  );\n}\n\nexport default RTL;\n","export default __webpack_public_path__ + \"static/media/react-logo.561f1671.png\";","import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport RTLLayout from \"layouts/RTL/RTL.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n          <Route path=\"/rtl\" render={(props) => <RTLLayout {...props} />} />\n          <Redirect from=\"/\" to=\"/admin/characters\" />\n        </Switch>\n      </BrowserRouter>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById(\"root\")\n);\n","export default __webpack_public_path__ + \"static/media/anime3.4438e506.png\";"],"sourceRoot":""}